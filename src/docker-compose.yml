version: "2.2"
services:
  farm-db:
    restart: always
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Michelin/1 
      - POSTGRES_DB=farm
    volumes:
      - /srv/docker/postgresql:/var/lib/postgresql
    networks:
      db:
        aliases:
          - database
  farm-rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - ./rabbitmq-isolated.conf:/etc/rabbitmq/rabbitmq.config
    networks:
      db:
        aliases:
          - rabbitmq
  farm-suppliers:
    build:
      context: .
      dockerfile: Services/Suppliers/Farm.Suppliers.WebAPI/Dockerfile
      args:
        buildno: 1
    environment:
      - DB_SERVER=database
      - ASPNETCORE_URLS=http://+:8001
    depends_on: 
      - farm-db
      - farm-rabbitmq
    ports:
      - "8001:8001"
    networks:
      db :
        aliases:
          - backend-suppliers
  farm-animals:
    build:
      context: .
      dockerfile: Services/Animals/Farm.Animals.WebAPI/Dockerfile
      args:
        buildno: 1
    environment:
      - DB_SERVER=database
      - ASPNETCORE_URLS=http://+:8002 
    depends_on: 
      - farm-db
      - farm-rabbitmq
    ports:
      - "8002:8002"
    networks:
      db :
        aliases:
          - backend-animals
  farm-billing:
    build:
      context: .
      dockerfile: Services/Billing/Farm.Billing.WebAPI/Dockerfile
      args:
        buildno: 1
    environment:
      - DB_SERVER=database
      - ASPNETCORE_URLS=http://+:8003
    depends_on: 
      - farm-db
      - farm-rabbitmq
    ports:
      - "8003:8003"
    networks:
      db :
        aliases:
          - backend-billing
  frontend:
    build:
      context: .
      dockerfile: Front/Farm.UI/Dockerfile
      args:
        buildno: 1
    environment:
      - ASPNETCORE_URLS=http://+:80
    depends_on: 
      - farm-db
      - farm-billing
      - farm-animals
      - farm-suppliers
    ports:
      - "80:80"
networks:
  db: